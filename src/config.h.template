/*
 * Copyright (c) 2015-2019 Thomas Kolb
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

#ifndef CONFIG_H
#define CONFIG_H

/* Sample rate */
#define SAMP_RATE 2400000

/* Center frequencies */
#define CENTER_FREQ_TX 438050000
#define CENTER_FREQ_RX (CENTER_FREQ_TX + 100000)

/* Gain settings */
#define TXVGA_GAIN 0 //47

#define TXPA_ENABLE 0

#define RXLNA_GAIN 16
#define RXVGA_GAIN 20

/* Enable or disable antenna power (Bias) during TX or RX: 0 = off, 1 = on */
#define ANT_POWER_RX 0
#define ANT_POWER_TX 0

/* Number of repeated TX values before a switch to RX occurs */
#define MAX_DC_BYTES_TX ((1L<<18) * 14 / 10)

/* Max. iterations of DC check loop. This is used to drain the input fifo */
#define DC_CHECK_MAX_LOOPS 128

/* Tolerance for DC values (keep this small!) */
#define DC_CHECK_TOLERANCE 1

/* Number of bytes to read during a DC check loop */
#define DC_CHECK_BUFFER_LEN (1<<18)

#define FREQ_OFFSET_PPM (0)

/* do not change */
#define REAL_CENTER_FREQ_TX (uint64_t)(CENTER_FREQ_TX * (1.0 + FREQ_OFFSET_PPM * 1e-6))
#define REAL_CENTER_FREQ_RX (uint64_t)(CENTER_FREQ_RX * (1.0 + FREQ_OFFSET_PPM * 1e-6))

#endif // CONFIG_H
